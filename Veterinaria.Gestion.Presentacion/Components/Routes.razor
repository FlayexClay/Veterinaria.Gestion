@using Microsoft.AspNetCore.Components.Authorization
@using Veterinaria.Gestion.Presentacion.Components.Pages.Login
@using Veterinaria.Gestion.Presentacion.Servicios
@inject NavigationManager Navegador
<CascadingAuthenticationState>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">

            @if (routeData.PageType == typeof(Login))
            {
                <RouteView RouteData="routeData" DefaultLayout="null" />
            }
            else
            {
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(Layout.MainLayout)">
                    <NotAuthorized>
                        @if (!context.User.Identity!.IsAuthenticated)
                        {
                            Navegador.NavigateTo(Rutas.Login);
                        }
                        else{
                            <h2>No tienes acceso a esta pagina</h2>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
            }
        </Found>
        <NotFound>
            <LayoutView Layout="typeof(Layout.MainLayout)">
                <p>Lo sentimos, no hemos encontrado la página que buscas.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code{
    [Inject] private AutenticacionService AuthService { get; set; } = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await AuthService.InitializedAsync();
            StateHasChanged();
        }
    }
}